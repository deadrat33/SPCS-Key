name: Android APK Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y python3-pip build-essential git openjdk-8-jdk unzip zlib1g-dev wget
        pip install buildozer cython

    - name: Install Android SDK & Accept Licenses
      run: |
        rm -rf $HOME/android-sdk
        mkdir -p $HOME/android-sdk/cmdline-tools/latest
        cd $HOME/android-sdk/cmdline-tools/latest
        wget https://dl.google.com/android/repository/commandlinetools-linux-8512546_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH
        yes | sdkmanager --licenses
        sdkmanager "platform-tools" "platforms;android-29" "build-tools;29.0.3"

    - name: Build APK
      run: |
        export ANDROID_SDK_ROOT=$HOME/android-sdk
        export PATH=$ANDROID_SDK_ROOT/cmdline-tools/latest/bin:$ANDROID_SDK_ROOT/platform-tools:$PATH
        buildozer android debug

    - name: Move APK to repo folder
      run: |
        mkdir -p release
        cp bin/*.apk release/

    - name: Commit APK to repo
      run: |
        git config --global user.name "github-actions"
        git config --global user.email "github-actions@github.com"
        git add release/*.apk
        git commit -m "Add built APK [skip ci]" || echo "No changes to commit"
        git push
